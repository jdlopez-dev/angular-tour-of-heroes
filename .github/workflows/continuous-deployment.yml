name: continuous-deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          check-latest: true
      - name: Cache node modules
        id: cache-node-modules-id
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-node-modules-id.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
      - name: Test
        run: |
          npm run test -- --prod
  release-changelog:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: "false"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
  deploy:
    needs: release-changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          check-latest: true
      - name: Cache node modules
        id: cache-node-modules-id
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-node-modules-id.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Deploy
        run: |
          npm run deploy
